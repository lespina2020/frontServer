{"version":3,"file":"js/557.6d2b39c2.js","mappings":"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","sources":["webpack://pvr/./src/helper/list.js","webpack://pvr/./src/components/rutas/rutas.vue","webpack://pvr/./src/components/rutas/rutas.vue?c784"],"sourcesContent":["import apiAxios from \"../axios/index\";\nimport store from \"../store/index\";\nimport router from \"../router/index\";\n//import { ref } from \"vue\";\n\n/*const categorias = ref([]),\n  //supervisores = ref([]),\n  //unidades = ref([]),\n // modelos = ref([]); */\n\n//const method = \"POST\";\n//let options = {};\n\nlet token = JSON.parse(localStorage.getItem(\"token\"));\n\nlet { accessToken } = token;\n\nconsole.log(accessToken);\n\nconst listas = async (url, options) => {\n  let lista;\n\n  await apiAxios(url, accessToken, options)\n    .then((respo) => {\n      lista = respo;\n    })\n    .catch((error) => {\n      console.log(error);\n      if (error.message === \"Request failed with status code 401\") {\n        localStorage.clear();\n\n        router.go(\"/login\");\n      }\n    });\n\n  return lista;\n};\n\nconst paginacion = (variable, page, filtro, methods) => {\n  console.log(variable, page);\n\n  let str = filtro;\n  let strs = str?.toString();\n  let payLoad = {\n    url: methods.paginacion,\n    options: {\n      method: methods.GET,\n    },\n    params: {\n      page: page,\n      size: 10,\n      title: strs,\n      base: variable.tabla,\n      varPagina: variable.varPaginacion,\n    },\n  };\n  store.dispatch(\"loadList\", payLoad);\n};\n\n/*const listas2 = async ({ url, options }) =>\n  await apiAxios(url, options).then((res) => res);\n\nlet url = \"/api/categoria/All\",\n  options = {\n    method,\n  };\n/*\nlistas(url, options).then((res) => {\n  categorias.value = res.data;\n});\n\nurl = \"/api/modelo/All\";\noptions = {\n  method,\n};\n\n/*listas(url, options).then((res) => {\n  modelos.value = res.data;\n});\n\nurl = \"/api/supervisores/All\";\noptions = {\n  method,\n};\n\n/*listas(url, options).then((res) => {\n  supervisores.value = res.data;\n});\nurl = \"/api/supervisores/All\";\noptions = {\n  \n  \n  ,\n};\n\nlistas(url, options).then((res) => {\n  supervisores.value = res.data;\n});\n\n/*url = \"/api/sectores/All\";\noptions = {\n  method,\n};\n\nlistas(url, options).then((res) => {\n  sectores.value = res.data;\n});*/\n\nconst search = (val, urlEndPoint, comparaValor) => {\n  if (val) {\n    let varBusqueda = val.toString();\n    if (varBusqueda != comparaValor && val != \"\") {\n      let url = urlEndPoint,\n        options = {\n          method: \"GET\",\n        };\n\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          apiAxios(`${url}${val}`, accessToken, options)\n            .then((response) => {\n              let resul = response.data;\n\n              resolve(!resul.length || `*  ya existe`);\n            })\n            .catch((error) => {\n              if (error.message === \"Request failed with status code 401\") {\n                localStorage.clear();\n\n                router.push(\"/login\");\n              }\n            });\n        }, 1000);\n      });\n    }\n  }\n};\n\nconst loadList = async (url, options) => {\n  return await apiAxios(url, accessToken, options);\n\n  /*if (store.getters.isList) {\n    vehiculos.value = store.getters.isList;\n  }*/\n};\n\n/*const listCondicionesPick = [\n  {\n    id: 1,\n    condicion: \"Cauchos #1\",\n  },\n  {\n    id: 2,\n    condicion: \"Cauchos #2\",\n  },\n  {\n    id: 3,\n    condicion: \"Cauchos #3\",\n  },\n  {\n    id: 4,\n    condicion: \"Cauchos #4\",\n  },\n\n  {\n    id: 7,\n    condicion: \"Carroceria General\",\n  },\n  {\n    id: 8,\n    condicion: \"Faros delanteros\",\n  },\n  {\n    id: 9,\n    condicion: \"Luces Traseras\",\n  },\n  {\n    id: 10,\n    condicion: \"Parachoque\",\n  },\n  {\n    id: 11,\n    condicion: \"Tapa de Combustible\",\n  },\n  {\n    id: 12,\n    condicion: \"Espejos Retrovisores\",\n  },\n  {\n    id: 13,\n    condicion: \"Extintor\",\n  },\n  {\n    id: 14,\n    condicion: \"Triangulo de Seguridad\",\n  },\n];\n\nconst listCondicionesCompactadora = [\n  {\n    id: 1,\n    condicion: \"Cauchos #1\",\n  },\n  {\n    id: 2,\n    condicion: \"Cauchos #2\",\n  },\n  {\n    id: 3,\n    condicion: \"Cauchos #3\",\n  },\n  {\n    id: 4,\n    condicion: \"Cauchos #4\",\n  },\n  {\n    id: 5,\n    condicion: \"Cauchos #5\",\n  },\n  {\n    id: 6,\n    condicion: \"Cauchos #6\",\n  },\n\n  {\n    id: 7,\n    condicion: \"Carroceria General\",\n  },\n  {\n    id: 8,\n    condicion: \"Faros delanteros\",\n  },\n  {\n    id: 9,\n    condicion: \"Luces Traseras\",\n  },\n  {\n    id: 10,\n    condicion: \"Parachoque\",\n  },\n  {\n    id: 11,\n    condicion: \"Tapa de Combustible\",\n  },\n  {\n    id: 12,\n    condicion: \"Espejos Retrovisores\",\n  },\n  {\n    id: 13,\n    condicion: \"Extintor\",\n  },\n  {\n    id: 14,\n    condicion: \"Triangulo de Seguridad\",\n  },\n];*/\nconst tipoUsuario = [\n  {\n    id: 1,\n    tipoUsuario: \"operador\",\n  },\n  {\n    id: 2,\n    tipoUsuario: \"administrador\",\n  },\n];\n/*\nconst listaCondiciones = (tipoUnidad) => {\n  if (tipoUnidad === \"COMPACTADORA\") {\n    return listCondicionesCompactadora;\n  } else {\n    return listCondicionesPick;\n  }\n};*/\n\nexport {\n  // categorias,\n  // modelos,\n  // sectores,\n  // supervisores,\n  search,\n  //listas2,\n  listas,\n  //listaCondiciones,\n  //unidades,\n  tipoUsuario,\n  loadList,\n  paginacion,\n};\n","<template>\n  <div class=\"q-pa-md\">\n    <q-card class=\"my-card\" flat bordered>\n      <q-card-section class=\"bg-green text-white\">\n        <q-btn color=\"green\" :icon=\"'arrow_back'\" size=\"sm\" to=\"/rutas\">\n          <q-tooltip> Atras</q-tooltip></q-btn\n        >Rutas\n      </q-card-section>\n      <q-form ref=\"myForm\" @submit.prevent=\"action\">\n        <q-card-actions>\n          <div class=\"row\">\n            <div class=\"contenido\">\n              <q-input\n                type=\"text\"\n                label=\"Ruta\"\n                :disable=\"isDisabled\"\n                v-model=\"model.ruta\"\n                lazy-rules\n                :rules=\"[required]\"\n                autogrow\n              >\n                <!---       @update:model-value=\"verificar(requeridLetter(model.nombreCurso))\"\n                required-->\n                <template v-slot:prepend>\n                  <q-icon name=\"card_membership\" color=\"blue\" />\n                </template>\n              </q-input>\n            </div>\n\n            <div class=\"contenido\">\n              <q-input\n                type=\"text\"\n                label=\"Codigo Ruta\"\n                :disable=\"isDisabled\"\n                v-model=\"model.codRuta\"\n                :rules=\"[\n                  (val) => search(val, '/api/Codrutas/', ruta),\n                  required,\n                ]\"\n              >\n                <!---       @update:model-value=\"verificar(requeridLetter(model.nombreCurso))\"\n                required-->\n                <template v-slot:prepend>\n                  <q-icon name=\"person_add\" color=\"blue\" />\n                </template>\n              </q-input>\n            </div>\n            <div class=\"contenido\">\n              <q-select\n                v-model=\"model.idSupervisor\"\n                :options=\"supervisores\"\n                option-value=\"nombreApellido\"\n                option-label=\"nombreApellido\"\n                :disable=\"isDisabled\"\n                emit-value\n                map-options\n                label=\"Supervisor de Rutas\"\n              />\n            </div>\n            <div class=\"contenido\">\n              <q-select\n                v-model=\"model.idSector\"\n                :options=\"sectores\"\n                option-value=\"sector\"\n                option-label=\"sector\"\n                :disable=\"isDisabled\"\n                emit-value\n                map-options\n                label=\"Sectores\"\n              />\n            </div>\n          </div>\n        </q-card-actions>\n        <q-separator />\n        <!-- <Buttons :lbl=\"labelButon\" @click=\"datos()\"   @click=\"stepFunction()\" /> -->\n        <q-card-actions>\n          <q-btn\n            size=\"sm\"\n            color=\"red\"\n            :disable=\"buttonDisabled\"\n            type=\"submit\"\n            :label=\"label\"\n          />\n        </q-card-actions>\n      </q-form>\n    </q-card>\n  </div>\n</template>\n<script>\nimport { ref } from \"vue\";\nimport { search, loadList } from \"../../helper/list\";\n//import { unidades } from \"../../helper/variables\";\nimport { required /*, contarObjeto*/ } from \"../../helper/validation\";\nimport crud from \"../../composables/index\";\nimport { rutas } from \"../../helper/vars\";\nimport { useQuasar } from \"quasar\";\nimport { useStore } from \"vuex\";\nexport default {\n  setup() {\n    const model = ref([]),\n      supervisores = ref([]),\n      store = useStore(),\n      opc = ref({ method: \"POST\" }),\n      myForm = ref(null),\n      myAction = {},\n      isDisabled = ref(false),\n      sectores = ref([]),\n      buttonDisabled = ref(false),\n      $q = useQuasar(),\n      // store = useStore(),\n      label = ref(\"Guardar\"),\n      ruta = ref(\"\");\n\n    /****VARIABLE FIJA PARA EL BUSCADOR SEARCH* */\n\n    loadList(\"/api/sectores/All\", opc.value).then(\n      (datos) => (sectores.value = datos.data)\n    );\n    loadList(\"/api/supervisores/All\", opc.value).then(\n      (datos) => (supervisores.value = datos.data)\n    );\n\n    // let idUsuario = store.getters.isGetter(\"isToken\").email;\n\n    /****VARIABLE FIJA PARA EL BUSCADOR SEARCH* */\n\n    if (store.getters.isGetter(\"isAction\").data) {\n      Object.assign(myAction, store.getters.isGetter(\"isAction\"));\n\n      model.value = myAction.data[0];\n      label.value = myAction.label;\n      ruta.value = myAction.data[0].codRuta;\n\n      console.log(ruta.value);\n\n      if (label.value != \"Eliminar\") {\n        buttonDisabled.value = myAction.disabled;\n      }\n      isDisabled.value = myAction.disabled;\n    }\n    const action = () => {\n      console.log(store.getters.isAction);\n\n      let data = {};\n      Object.assign(data, model.value);\n\n      const { confirm } = crud();\n\n      //   action(data, myAction, unidades);\n\n      $q.notify(confirm(data, myAction, rutas));\n    };\n\n    return {\n      supervisores,\n      model,\n      search,\n      action,\n      myForm,\n      isDisabled,\n      buttonDisabled,\n      required,\n      ruta,\n      sectores,\n      label,\n    };\n  },\n};\n</script>\n<style>\n.contenido {\n  padding: 1% 1px 12px 25px;\n  width: 200px;\n}\n</style>\n","import { render } from \"./rutas.vue?vue&type=template&id=6ac497ff\"\nimport script from \"./rutas.vue?vue&type=script&lang=js\"\nexport * from \"./rutas.vue?vue&type=script&lang=js\"\n\nimport \"./rutas.vue?vue&type=style&index=0&id=6ac497ff&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QTooltip from 'quasar/src/components/tooltip/QTooltip.js';\nimport QForm from 'quasar/src/components/form/QForm.js';\nimport QCardActions from 'quasar/src/components/card/QCardActions.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QSelect from 'quasar/src/components/select/QSelect.js';\nimport QSeparator from 'quasar/src/components/separator/QSeparator.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QCard,QCardSection,QBtn,QTooltip,QForm,QCardActions,QInput,QIcon,QSelect,QSeparator});\n"],"names":["token","JSON","parse","localStorage","getItem","accessToken","console","log","listas","async","url","options","lista","apiAxios","then","respo","catch","error","message","clear","router","go","paginacion","variable","page","filtro","methods","str","strs","toString","payLoad","method","GET","params","size","title","base","tabla","varPagina","varPaginacion","store","dispatch","search","val","urlEndPoint","comparaValor","varBusqueda","Promise","resolve","setTimeout","response","resul","data","length","push","loadList","tipoUsuario","id","class","_createElementBlock","_hoisted_1","_createVNode","_component_q_card","flat","bordered","_component_q_card_section","_component_q_btn","color","icon","to","_component_q_tooltip","_component_q_form","ref","onSubmit","_withModifiers","$setup","action","_component_q_card_actions","_createElementVNode","_hoisted_2","_hoisted_3","_component_q_input","type","label","disable","isDisabled","model","ruta","$event","rules","required","autogrow","prepend","_withCtx","_component_q_icon","name","_hoisted_4","codRuta","_hoisted_5","_component_q_select","idSupervisor","supervisores","_hoisted_6","idSector","sectores","_component_q_separator","buttonDisabled","setup","useStore","opc","myForm","myAction","$q","useQuasar","value","datos","getters","isGetter","Object","assign","disabled","isAction","confirm","crud","notify","rutas","__exports__","render","QCard"],"sourceRoot":""}