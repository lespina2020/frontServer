{"version":3,"file":"js/670.08680303.js","mappings":"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","sources":["webpack://pvr/./node_modules/quasar/src/components/tooltip/QTooltip.js","webpack://pvr/./node_modules/@kurkle/color/dist/color.esm.js","webpack://pvr/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://pvr/./node_modules/chart.js/dist/chart.js","webpack://pvr/./node_modules/vue-chartjs/dist/index.js"],"sourcesContent":["import { h, ref, computed, watch, onBeforeUnmount, Transition, getCurrentInstance } from 'vue'\n\nimport useAnchor, { useAnchorProps } from '../../composables/private/use-anchor.js'\nimport useScrollTarget from '../../composables/private/use-scroll-target.js'\nimport useModelToggle, { useModelToggleProps, useModelToggleEmits } from '../../composables/private/use-model-toggle.js'\nimport usePortal from '../../composables/private/use-portal.js'\nimport useTransition, { useTransitionProps } from '../../composables/private/use-transition.js'\nimport useTick from '../../composables/private/use-tick.js'\nimport useTimeout from '../../composables/private/use-timeout.js'\n\nimport { createComponent } from '../../utils/private/create.js'\nimport { getScrollTarget } from '../../utils/scroll.js'\nimport { stopAndPrevent, addEvt, cleanEvt } from '../../utils/event.js'\nimport { clearSelection } from '../../utils/private/selection.js'\nimport { hSlot } from '../../utils/private/render.js'\nimport { addClickOutside, removeClickOutside } from '../../utils/private/click-outside.js'\nimport {\n  validatePosition, validateOffset, setPosition, parsePosition\n} from '../../utils/private/position-engine.js'\n\nexport default createComponent({\n  name: 'QTooltip',\n\n  inheritAttrs: false,\n\n  props: {\n    ...useAnchorProps,\n    ...useModelToggleProps,\n    ...useTransitionProps,\n\n    maxHeight: {\n      type: String,\n      default: null\n    },\n    maxWidth: {\n      type: String,\n      default: null\n    },\n\n    transitionShow: {\n      default: 'jump-down'\n    },\n    transitionHide: {\n      default: 'jump-up'\n    },\n\n    anchor: {\n      type: String,\n      default: 'bottom middle',\n      validator: validatePosition\n    },\n    self: {\n      type: String,\n      default: 'top middle',\n      validator: validatePosition\n    },\n    offset: {\n      type: Array,\n      default: () => [ 14, 14 ],\n      validator: validateOffset\n    },\n\n    scrollTarget: {\n      default: void 0\n    },\n\n    delay: {\n      type: Number,\n      default: 0\n    },\n\n    hideDelay: {\n      type: Number,\n      default: 0\n    }\n  },\n\n  emits: [\n    ...useModelToggleEmits\n  ],\n\n  setup (props, { slots, emit, attrs }) {\n    let unwatchPosition, observer\n\n    const vm = getCurrentInstance()\n    const { proxy: { $q } } = vm\n\n    const innerRef = ref(null)\n    const showing = ref(false)\n\n    const anchorOrigin = computed(() => parsePosition(props.anchor, $q.lang.rtl))\n    const selfOrigin = computed(() => parsePosition(props.self, $q.lang.rtl))\n    const hideOnRouteChange = computed(() => props.persistent !== true)\n\n    const { registerTick, removeTick } = useTick()\n    const { registerTimeout } = useTimeout()\n    const { transitionProps, transitionStyle } = useTransition(props)\n    const { localScrollTarget, changeScrollEvent, unconfigureScrollTarget } = useScrollTarget(props, configureScrollTarget)\n\n    const { anchorEl, canShow, anchorEvents } = useAnchor({ showing, configureAnchorEl })\n\n    const { show, hide } = useModelToggle({\n      showing, canShow, handleShow, handleHide,\n      hideOnRouteChange,\n      processOnMount: true\n    })\n\n    Object.assign(anchorEvents, { delayShow, delayHide })\n\n    const { showPortal, hidePortal, renderPortal } = usePortal(vm, innerRef, renderPortalContent, 'tooltip')\n\n    // if we're on mobile, let's improve the experience\n    // by closing it when user taps outside of it\n    if ($q.platform.is.mobile === true) {\n      const clickOutsideProps = {\n        anchorEl,\n        innerRef,\n        onClickOutside (e) {\n          hide(e)\n\n          // prevent click if it's on a dialog backdrop\n          if (e.target.classList.contains('q-dialog__backdrop')) {\n            stopAndPrevent(e)\n          }\n\n          return true\n        }\n      }\n\n      const hasClickOutside = computed(() =>\n        // it doesn't has external model\n        // (null is the default value)\n        props.modelValue === null\n        // and it's not persistent\n        && props.persistent !== true\n        && showing.value === true\n      )\n\n      watch(hasClickOutside, val => {\n        const fn = val === true ? addClickOutside : removeClickOutside\n        fn(clickOutsideProps)\n      })\n\n      onBeforeUnmount(() => {\n        removeClickOutside(clickOutsideProps)\n      })\n    }\n\n    function handleShow (evt) {\n      showPortal()\n\n      // should removeTick() if this gets removed\n      registerTick(() => {\n        observer = new MutationObserver(() => updatePosition())\n        observer.observe(innerRef.value, { attributes: false, childList: true, characterData: true, subtree: true })\n        updatePosition()\n        configureScrollTarget()\n      })\n\n      if (unwatchPosition === void 0) {\n        unwatchPosition = watch(\n          () => $q.screen.width + '|' + $q.screen.height + '|' + props.self + '|' + props.anchor + '|' + $q.lang.rtl,\n          updatePosition\n        )\n      }\n\n      // should removeTimeout() if this gets removed\n      registerTimeout(() => {\n        showPortal(true) // done showing portal\n        emit('show', evt)\n      }, props.transitionDuration)\n    }\n\n    function handleHide (evt) {\n      removeTick()\n      hidePortal()\n\n      anchorCleanup()\n\n      // should removeTimeout() if this gets removed\n      registerTimeout(() => {\n        hidePortal(true) // done hiding, now destroy\n        emit('hide', evt)\n      }, props.transitionDuration)\n    }\n\n    function anchorCleanup () {\n      if (observer !== void 0) {\n        observer.disconnect()\n        observer = void 0\n      }\n\n      if (unwatchPosition !== void 0) {\n        unwatchPosition()\n        unwatchPosition = void 0\n      }\n\n      unconfigureScrollTarget()\n      cleanEvt(anchorEvents, 'tooltipTemp')\n    }\n\n    function updatePosition () {\n      setPosition({\n        targetEl: innerRef.value,\n        offset: props.offset,\n        anchorEl: anchorEl.value,\n        anchorOrigin: anchorOrigin.value,\n        selfOrigin: selfOrigin.value,\n        maxHeight: props.maxHeight,\n        maxWidth: props.maxWidth\n      })\n    }\n\n    function delayShow (evt) {\n      if ($q.platform.is.mobile === true) {\n        clearSelection()\n        document.body.classList.add('non-selectable')\n\n        const target = anchorEl.value\n        const evts = [ 'touchmove', 'touchcancel', 'touchend', 'click' ]\n          .map(e => ([ target, e, 'delayHide', 'passiveCapture' ]))\n\n        addEvt(anchorEvents, 'tooltipTemp', evts)\n      }\n\n      registerTimeout(() => { show(evt) }, props.delay)\n    }\n\n    function delayHide (evt) {\n      if ($q.platform.is.mobile === true) {\n        cleanEvt(anchorEvents, 'tooltipTemp')\n        clearSelection()\n        // delay needed otherwise selection still occurs\n        setTimeout(() => {\n          document.body.classList.remove('non-selectable')\n        }, 10)\n      }\n\n      // should removeTimeout() if this gets removed\n      registerTimeout(() => { hide(evt) }, props.hideDelay)\n    }\n\n    function configureAnchorEl () {\n      if (props.noParentEvent === true || anchorEl.value === null) { return }\n\n      const evts = $q.platform.is.mobile === true\n        ? [\n            [ anchorEl.value, 'touchstart', 'delayShow', 'passive' ]\n          ]\n        : [\n            [ anchorEl.value, 'mouseenter', 'delayShow', 'passive' ],\n            [ anchorEl.value, 'mouseleave', 'delayHide', 'passive' ]\n          ]\n\n      addEvt(anchorEvents, 'anchor', evts)\n    }\n\n    function configureScrollTarget () {\n      if (anchorEl.value !== null || props.scrollTarget !== void 0) {\n        localScrollTarget.value = getScrollTarget(anchorEl.value, props.scrollTarget)\n        const fn = props.noParentEvent === true\n          ? updatePosition\n          : hide\n\n        changeScrollEvent(localScrollTarget.value, fn)\n      }\n    }\n\n    function getTooltipContent () {\n      return showing.value === true\n        ? h('div', {\n          ...attrs,\n          ref: innerRef,\n          class: [\n            'q-tooltip q-tooltip--style q-position-engine no-pointer-events',\n            attrs.class\n          ],\n          style: [\n            attrs.style,\n            transitionStyle.value\n          ],\n          role: 'tooltip'\n        }, hSlot(slots.default))\n        : null\n    }\n\n    function renderPortalContent () {\n      return h(Transition, transitionProps.value, getTooltipContent)\n    }\n\n    onBeforeUnmount(anchorCleanup)\n\n    // expose public methods\n    Object.assign(vm.proxy, { updatePosition })\n\n    return renderPortal\n  }\n})\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import { version, isProxy, toRaw, defineComponent, ref, shallowRef, onMounted, onBeforeUnmount, watch, h } from 'vue';\nimport { Chart as Chart$1, BarController, DoughnutController, LineController, PieController, PolarAreaController, RadarController, BubbleController, ScatterController } from 'chart.js';\n\nconst CommonProps = {\n    data: {\n        type: Object,\n        required: true\n    },\n    options: {\n        type: Object,\n        default: ()=>({})\n    },\n    plugins: {\n        type: Array,\n        default: ()=>[]\n    },\n    datasetIdKey: {\n        type: String,\n        default: \"label\"\n    },\n    updateMode: {\n        type: String,\n        default: undefined\n    }\n};\nconst Props = {\n    type: {\n        type: String,\n        required: true\n    },\n    ...CommonProps\n};\n\nconst compatProps = version[0] === \"2\" ? (internals, props)=>Object.assign(internals, {\n        attrs: props\n    }) : (internals, props)=>Object.assign(internals, props);\nfunction toRawIfProxy(obj) {\n    return isProxy(obj) ? toRaw(obj) : obj;\n}\nfunction cloneProxy(obj) {\n    let src = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : obj;\n    return isProxy(src) ? new Proxy(obj, {}) : obj;\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets, datasetIdKey) {\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data, datasetIdKey) {\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"dataset\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"nearest\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"index\", {\n        intersect: true\n    }, false);\n}\n\nconst Chart = defineComponent({\n    props: Props,\n    setup (props, param) {\n        let { expose  } = param;\n        const canvasRef = ref(null);\n        const chartRef = shallowRef(null);\n        expose({\n            chart: chartRef\n        });\n        const renderChart = ()=>{\n            if (!canvasRef.value) return;\n            const { type , data , options , plugins , datasetIdKey  } = props;\n            const clonedData = cloneData(data, datasetIdKey);\n            const proxiedData = cloneProxy(clonedData, data);\n            chartRef.value = new Chart$1(canvasRef.value, {\n                type,\n                data: proxiedData,\n                options: {\n                    ...options\n                },\n                plugins\n            });\n        };\n        const destroyChart = ()=>{\n            const chart = toRaw(chartRef.value);\n            if (chart) {\n                chart.destroy();\n                chartRef.value = null;\n            }\n        };\n        const update = (chart)=>{\n            chart.update(props.updateMode);\n        };\n        onMounted(renderChart);\n        onBeforeUnmount(destroyChart);\n        watch([\n            ()=>props.options,\n            ()=>props.data\n        ], (param, param1)=>{\n            let [nextOptionsProxy, nextDataProxy] = param, [prevOptionsProxy, prevDataProxy] = param1;\n            const chart = toRaw(chartRef.value);\n            if (!chart) {\n                return;\n            }\n            let shouldUpdate = false;\n            if (nextOptionsProxy) {\n                const nextOptions = toRawIfProxy(nextOptionsProxy);\n                const prevOptions = toRawIfProxy(prevOptionsProxy);\n                if (nextOptions && nextOptions !== prevOptions) {\n                    setOptions(chart, nextOptions);\n                    shouldUpdate = true;\n                }\n            }\n            if (nextDataProxy) {\n                const nextLabels = toRawIfProxy(nextDataProxy.labels);\n                const prevLabels = toRawIfProxy(prevDataProxy.labels);\n                const nextDatasets = toRawIfProxy(nextDataProxy.datasets);\n                const prevDatasets = toRawIfProxy(prevDataProxy.datasets);\n                if (nextLabels !== prevLabels) {\n                    setLabels(chart.config.data, nextLabels);\n                    shouldUpdate = true;\n                }\n                if (nextDatasets && nextDatasets !== prevDatasets) {\n                    setDatasets(chart.config.data, nextDatasets, props.datasetIdKey);\n                    shouldUpdate = true;\n                }\n            }\n            if (shouldUpdate) {\n                update(chart);\n            }\n        }, {\n            deep: true\n        });\n        return ()=>{\n            return h(\"canvas\", {\n                ref: canvasRef\n            });\n        };\n    }\n});\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return defineComponent({\n        props: CommonProps,\n        setup (props, param) {\n            let { expose  } = param;\n            const ref = shallowRef(null);\n            const reforwardRef = (chartRef)=>{\n                ref.value = chartRef?.chart;\n            };\n            expose({\n                chart: ref\n            });\n            return ()=>{\n                return h(Chart, compatProps({\n                    ref: reforwardRef\n                }, {\n                    type,\n                    ...props\n                }));\n            };\n        }\n    });\n}\nconst Bar = /* #__PURE__ */ createTypedChart(\"bar\", BarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart(\"doughnut\", DoughnutController);\nconst Line = /* #__PURE__ */ createTypedChart(\"line\", LineController);\nconst Pie = /* #__PURE__ */ createTypedChart(\"pie\", PieController);\nconst PolarArea = /* #__PURE__ */ createTypedChart(\"polarArea\", PolarAreaController);\nconst Radar = /* #__PURE__ */ createTypedChart(\"radar\", RadarController);\nconst Bubble = /* #__PURE__ */ createTypedChart(\"bubble\", BubbleController);\nconst Scatter = /* #__PURE__ */ createTypedChart(\"scatter\", ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, createTypedChart, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n"],"names":["createComponent","name","inheritAttrs","props","useAnchorProps","useModelToggleProps","useTransitionProps","maxHeight","type","String","default","maxWidth","transitionShow","transitionHide","anchor","validator","validatePosition","self","offset","Array","validateOffset","scrollTarget","delay","Number","hideDelay","emits","useModelToggleEmits","setup","slots","emit","attrs","unwatchPosition","observer","vm","getCurrentInstance","proxy","$q","innerRef","ref","showing","anchorOrigin","computed","parsePosition","lang","rtl","selfOrigin","hideOnRouteChange","persistent","registerTick","removeTick","useTick","registerTimeout","useTimeout","transitionProps","transitionStyle","useTransition","localScrollTarget","changeScrollEvent","unconfigureScrollTarget","useScrollTarget","configureScrollTarget","anchorEl","canShow","anchorEvents","useAnchor","configureAnchorEl","show","hide","useModelToggle","handleShow","handleHide","processOnMount","Object","assign","delayShow","delayHide","showPortal","hidePortal","renderPortal","usePortal","renderPortalContent","platform","is","mobile","clickOutsideProps","onClickOutside","e","target","classList","contains","stopAndPrevent","hasClickOutside","modelValue","value","watch","val","fn","addClickOutside","removeClickOutside","onBeforeUnmount","evt","MutationObserver","updatePosition","observe","attributes","childList","characterData","subtree","screen","width","height","transitionDuration","anchorCleanup","disconnect","cleanEvt","setPosition","targetEl","clearSelection","document","body","add","evts","map","addEvt","setTimeout","remove","noParentEvent","getScrollTarget","getTooltipContent","h","class","style","role","hSlot","Transition","round","v","lim","l","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","length","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","isArray","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","charAt","Color","constructor","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","prototype","toString","call","slice","isObject","isNumberFinite","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","timeout","clearTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","check","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","properties","active","animation","resize","animations","visible","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","_isDomSupported","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","xScale","yScale","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","meta","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForValue","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","iAxisKey","vAxisKey","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","skip","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","createAttachObserver","entries","trigger","addedNodes","removedNodes","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","gcLen","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","borderDashOffset","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineCap","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","previous","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","_args","afterEvent","ci","useBorderRadius","borderCapStyle","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","formattedValue","getTooltipSize","tooltip","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","addIfString","addedLabels","unshift","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","CommonProps","required","datasetIdKey","updateMode","Props","compatProps","internals","toRawIfProxy","cloneProxy","src","setOptions","nextOptions","setLabels","currentData","nextLabels","setDatasets","nextDatasets","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","param","expose","canvasRef","chartRef","renderChart","clonedData","proxiedData","destroyChart","param1","nextOptionsProxy","nextDataProxy","prevOptionsProxy","prevDataProxy","shouldUpdate","prevOptions","prevLabels","prevDatasets","deep","createTypedChart","registerables","reforwardRef","Bar","Doughnut"],"sourceRoot":""}